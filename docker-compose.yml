services:
  orion-v2:
    labels:
      org.fiware: 'tutorial'
    image: quay.io/fiware/orion:latest
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - fiware_network
    ports:
      - '1026:1026'
    command: -dbhost mongo-db -logLevel DEBUG -noCache
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
      interval: 5s

  mongo-db:
    labels:
      org.fiware: 'tutorial'
    image: mongo:4.2
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - '27017'
    ports:
      - '27017:27017'
    networks:
      - fiware_network
    volumes:
      - mongo-db:/data
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  iot-agent:
    labels:
      org.fiware: 'tutorial'
    image: quay.io/fiware/iotagent-ul:latest
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - mosquitto
    networks:
      - default
    expose:
      - "4041"
    ports:
      - "4041:4041" # localhost:4041
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=1026 # port the context broker listens on to update context
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=27017 # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentul # The name of the database used in mongoDB
      - IOTA_MQTT_HOST=mosquitto # The host name of the MQTT Broker
      - IOTA_MQTT_PORT=1883 # The port the MQTT Broker is listening on to receive topics
      - IOTA_DEFAULT_RESOURCE= # Default is blank. I'm using MQTT so I don't need a resource
      - IOTA_PROVIDER_URL=http://iot-agent:4041/
      - IOTA_DEFAULT_TRANSPORT=MQTT
    healthcheck:
      interval: 5s

  mosquitto:
      image: eclipse-mosquitto:1.6.14
      hostname: mosquitto
      container_name: mosquitto
      expose:
        - "1883"
        - "9001"
      ports:
        - "1883:1883"
        - "9001:9001"
      volumes:
        - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      networks:
        - fiware_network

  crate-db:
      image: crate:latest
      hostname: crate-db
      container_name: db-crate
      networks:
        - fiware_network
      ports:
        - "4200:4200"
        - "4300:4300"
      command: crate -Cauth.host_based.enabled=false -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*" -Cdiscovery.type=single-node
      environment:
        - CRATE_HEAP_SIZE=2g
      # volumes:
      #   - crate-db:/data/cratedb

  quantumleap:
      image: smartsdk/quantumleap
      hostname: quantumleap
      networks:
        - fiware_network
      ports:
          - '8668:8668'
      depends_on: 
          - crate-db
      environment:
          - CRATE_HOST=crate-db
          - LOGLEVEL=DEBUG

  grafana:
      image: grafana/grafana
      depends_on:
          - crate-db
      networks:
        - fiware_network
      ports:
          - '3003:3000'
      environment:
          - GF_INSTALL_PLUGINS=orchestracities-map-panel,grafana-clock-panel,grafana-worldmap-panel

networks:
  fiware_network:
    labels:
      org.fiware: 'tutorial'
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db: ~